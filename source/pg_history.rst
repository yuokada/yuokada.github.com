==================
プログラミング履歴
==================

大学時代
========
- 大学に入ったのが2005年でプログラミングに興味を持てたのは授業かな？
- それと株やってた影響。 OmegaChartっていうオープンソースのソフトを使っていたのでそれを自分で拡張してみたかった。
  実際にやったのはXMLの設定ファイルをいじる程度だったｗ
- 授業のfortran, C言語
- 橋本先生のバイトで始めたPerl

Perl
====
段落ってどうやって表現するの？
- これが本格的に手を付けたはじめの言語
地震データ解析プログラムの作成
- 今にすればヒドイものだ
- データベースなんてものは一切知らなかったので
- 強引にCSVファイルの解析をしてたっけ
- まだコードがあるけど１０００行超えるものだった。
- sprintf の存在を知らなくて何百業もおんなじようなコード書いてしまった。
- 正規表現もいまいち理解してなかったからその辺も原因かな。
- 今ならデータベースとSQLを使って１００行かそこらで書ききれると思う。
- あと、O/Rマッパー使うと思うからへたしたら１００行も切るかもね。
- エラー処理もやってないし

Python
======
- Perlのあとに他の言語やりたいなと思って学生生協ぶらついてたら
  PythonとRubyの本に出会った。
- 某新聞によればグーグル独自言語のパイソンっていうものがあるらしいwww
  もちろん、その独自言語とは違うよ
- 当時はGoogle万歳の時代だったので日本人が作った言語のRubyと迷ったけど
  Pythonを選んだ
- Rubyの作者・まつもとゆきひろと下の名前が一緒っだので多少の親近感はあったけど
  Googleのほうが勝った。
- pythonの入門書にはみんなのpythonを使った
- オブジェクト指向なにそれ？美味しいの？状態だった自分には途中から難しかったけど
  一応ひと通り読みきってわかったつもりになっていた。
- 今読んだらモジュールとかChees Shopとか古い部分があるけど言語の説明のところは今読んでもいい本だと思う。
- 2版が去年辺りに出てるのでそれだと修正はいってるはず。
- pythonはインデントが嫌いっていう人が多いけど、
  僕はあれのお陰で綺麗にプログラミングするっていうことを覚えた人間なのであれには一切抵抗がない
- self は確かにめんどくさい。 これは何とかならないかな？
  関数からクラスメソッドに移す際にそのままカットアンドペーストだとダメでselfを追加する手間がある

R言語
=====
- あと、研究で得られたデータを


入社後
======

PHP
===

MySQL
=====
- 会社に入って初めて知って会社に入ってから一番好きになったプロダクト
- SQLの書き方を位置から学んでいまはビューも普通に書けるようになった。
- UDFとNative Function を作る経験もした。


Perl
====
- Moose
- オブジェクト指向開発
- WebService::Simple


Python
========
- 本格化


Future
======
- 世界一のCGMサービスの構築
- オンリーワンのサービスの構築
- not PF as a Servisce but PF is a service
